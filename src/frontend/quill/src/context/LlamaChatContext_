'use client';

import React, { createContext, useContext } from 'react';
import { ChatService } from '../services/chat/ChatService';
import { LlamaChatService } from '../services/chat/LlamaChatService';
import { R1ChatService } from '../services/chat/R1ChatService';

interface LlamaChatContextType {
    chatService: ChatService;
}

const ChatContext = createContext<LlamaChatContextType | undefined>(undefined);

const defaultChatService = new LlamaChatService();

export function ChatProvider({ children }: { children: React.ReactNode }) {
    return (
      <ChatContext.Provider value={{ chatService: defaultChatService }}>
        {children}
      </ChatContext.Provider>
    );
}

export function useChatService() {
    const context = useContext(ChatContext);
    if (context == undefined) {
        throw new Error('useChatService must be used within a ChatProvider');
    }
    return context;
}




